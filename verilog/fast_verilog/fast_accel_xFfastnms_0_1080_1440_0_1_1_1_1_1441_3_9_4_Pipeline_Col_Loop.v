// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module fast_accel_xFfastnms_0_1080_1440_0_1_1_1_1_1441_3_9_4_Pipeline_Col_Loop (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_dst_data1_dout,
        p_dst_data1_num_data_valid,
        p_dst_data1_fifo_cap,
        p_dst_data1_empty_n,
        p_dst_data1_read,
        imgOutput_data2_din,
        imgOutput_data2_num_data_valid,
        imgOutput_data2_fifo_cap,
        imgOutput_data2_full_n,
        imgOutput_data2_write,
        img_width_load,
        buf_V_2_address0,
        buf_V_2_ce0,
        buf_V_2_q0,
        buf_V_2_address1,
        buf_V_2_ce1,
        buf_V_2_we1,
        buf_V_2_d1,
        buf_V_address0,
        buf_V_ce0,
        buf_V_q0,
        buf_V_address1,
        buf_V_ce1,
        buf_V_we1,
        buf_V_d1,
        buf_V_1_address0,
        buf_V_1_ce0,
        buf_V_1_q0,
        buf_V_1_address1,
        buf_V_1_ce1,
        buf_V_1_we1,
        buf_V_1_d1,
        row_ind_V_7,
        row_ind_V_8,
        row_ind_V_9,
        sub_i214_i_cast,
        row_ind_V_7_cast,
        spec_select51,
        row_ind_V_8_cast,
        spec_select55,
        row_ind_V_9_cast,
        spec_select59,
        cmp_i_i322_i
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] p_dst_data1_dout;
input  [1:0] p_dst_data1_num_data_valid;
input  [1:0] p_dst_data1_fifo_cap;
input   p_dst_data1_empty_n;
output   p_dst_data1_read;
output  [7:0] imgOutput_data2_din;
input  [1:0] imgOutput_data2_num_data_valid;
input  [1:0] imgOutput_data2_fifo_cap;
input   imgOutput_data2_full_n;
output   imgOutput_data2_write;
input  [15:0] img_width_load;
output  [10:0] buf_V_2_address0;
output   buf_V_2_ce0;
input  [7:0] buf_V_2_q0;
output  [10:0] buf_V_2_address1;
output   buf_V_2_ce1;
output   buf_V_2_we1;
output  [7:0] buf_V_2_d1;
output  [10:0] buf_V_address0;
output   buf_V_ce0;
input  [7:0] buf_V_q0;
output  [10:0] buf_V_address1;
output   buf_V_ce1;
output   buf_V_we1;
output  [7:0] buf_V_d1;
output  [10:0] buf_V_1_address0;
output   buf_V_1_ce0;
input  [7:0] buf_V_1_q0;
output  [10:0] buf_V_1_address1;
output   buf_V_1_ce1;
output   buf_V_1_we1;
output  [7:0] buf_V_1_d1;
input  [12:0] row_ind_V_7;
input  [12:0] row_ind_V_8;
input  [12:0] row_ind_V_9;
input  [1:0] sub_i214_i_cast;
input  [1:0] row_ind_V_7_cast;
input  [0:0] spec_select51;
input  [1:0] row_ind_V_8_cast;
input  [0:0] spec_select55;
input  [1:0] row_ind_V_9_cast;
input  [0:0] spec_select59;
input  [0:0] cmp_i_i322_i;

reg ap_idle;
reg p_dst_data1_read;
reg imgOutput_data2_write;
reg buf_V_2_ce0;
reg buf_V_2_ce1;
reg buf_V_2_we1;
reg buf_V_ce0;
reg buf_V_ce1;
reg buf_V_we1;
reg buf_V_1_ce0;
reg buf_V_1_ce1;
reg buf_V_1_we1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln1027_reg_753;
reg   [0:0] and_ln666_reg_764;
reg    ap_predicate_op54_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
reg   [0:0] icmp_ln1027_reg_753_pp0_iter2_reg;
reg   [0:0] icmp_ln1031_reg_788;
reg    ap_predicate_op112_write_state4;
reg    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln1027_fu_354_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    p_dst_data1_blk_n;
wire    ap_block_pp0_stage0;
reg    imgOutput_data2_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [1:0] row_ind_V_9_cast_read_reg_721;
reg   [12:0] col_V_reg_746;
reg   [12:0] col_V_reg_746_pp0_iter1_reg;
reg   [0:0] icmp_ln1027_reg_753_pp0_iter1_reg;
wire   [0:0] icmp_ln1027_1_fu_366_p2;
reg   [0:0] icmp_ln1027_1_reg_757;
reg   [0:0] icmp_ln1027_1_reg_757_pp0_iter1_reg;
reg   [0:0] icmp_ln1027_1_reg_757_pp0_iter2_reg;
wire   [0:0] and_ln666_fu_372_p2;
wire   [1:0] trunc_ln789_fu_390_p1;
reg   [1:0] trunc_ln789_reg_768;
reg   [1:0] trunc_ln789_reg_768_pp0_iter1_reg;
reg   [1:0] trunc_ln789_reg_768_pp0_iter2_reg;
wire   [0:0] icmp_ln1031_fu_411_p2;
reg   [7:0] ap_phi_mux_src_buf_V_14_phi_fu_288_p4;
wire   [7:0] ap_phi_reg_pp0_iter3_src_buf_V_14_reg_285;
wire   [7:0] src_buf_V_18_fu_502_p3;
reg   [7:0] ap_phi_mux_src_buf_V_13_phi_fu_297_p4;
wire   [7:0] ap_phi_reg_pp0_iter3_src_buf_V_13_reg_294;
wire   [7:0] src_buf_V_19_fu_510_p3;
reg   [7:0] ap_phi_mux_src_buf_V_12_phi_fu_306_p4;
wire   [7:0] ap_phi_reg_pp0_iter3_src_buf_V_12_reg_303;
wire   [7:0] src_buf_V_20_fu_518_p3;
wire   [63:0] zext_ln541_fu_399_p1;
wire   [63:0] conv_i131_i_fu_405_p1;
reg   [12:0] col_V_4_fu_94;
wire   [12:0] col_V_5_fu_360_p2;
wire    ap_loop_init;
reg   [12:0] ap_sig_allocacmp_col_V;
reg   [7:0] src_buf_V_fu_98;
reg   [7:0] src_buf_V_3_fu_102;
reg   [7:0] src_buf_V_5_fu_106;
reg   [7:0] src_buf_V_1_fu_110;
reg   [7:0] src_buf_V_4_fu_114;
reg   [7:0] src_buf_V_2_fu_118;
reg    ap_block_pp0_stage0_01001;
wire   [15:0] zext_ln1027_fu_350_p1;
wire   [12:0] tmp_4_fu_378_p5;
wire   [7:0] tmp_5_fu_437_p5;
wire   [7:0] tmp_6_fu_448_p5;
wire   [7:0] tmp_9_fu_466_p5;
wire   [7:0] tmp_3_fu_484_p5;
wire   [7:0] src_buf_V_8_fu_495_p3;
wire   [7:0] src_buf_V_7_fu_477_p3;
wire   [7:0] src_buf_V_6_fu_459_p3;
wire   [0:0] icmp_ln1035_fu_526_p2;
wire   [0:0] icmp_ln1035_1_fu_532_p2;
wire   [0:0] icmp_ln1035_2_fu_538_p2;
wire   [0:0] icmp_ln1035_3_fu_544_p2;
wire   [0:0] and_ln1023_1_fu_586_p2;
wire   [0:0] and_ln1023_fu_580_p2;
wire   [0:0] icmp_ln1035_4_fu_550_p2;
wire   [0:0] icmp_ln1035_5_fu_556_p2;
wire   [0:0] icmp_ln1035_7_fu_568_p2;
wire   [0:0] icmp_ln1023_fu_574_p2;
wire   [0:0] and_ln1023_4_fu_604_p2;
wire   [0:0] icmp_ln1035_6_fu_562_p2;
wire   [0:0] and_ln1023_5_fu_610_p2;
wire   [0:0] and_ln1023_3_fu_598_p2;
wire   [0:0] and_ln1023_6_fu_616_p2;
wire   [0:0] and_ln1023_2_fu_592_p2;
wire   [0:0] pix_fu_622_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_done_reg = 1'b0;
end

fast_accel_mux_32_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 13 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 13 ))
mux_32_13_1_1_U163(
    .din0(row_ind_V_7),
    .din1(row_ind_V_8),
    .din2(row_ind_V_9),
    .din3(sub_i214_i_cast),
    .dout(tmp_4_fu_378_p5)
);

fast_accel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U164(
    .din0(buf_V_q0),
    .din1(buf_V_1_q0),
    .din2(buf_V_2_q0),
    .din3(trunc_ln789_reg_768_pp0_iter2_reg),
    .dout(tmp_5_fu_437_p5)
);

fast_accel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U165(
    .din0(buf_V_q0),
    .din1(buf_V_1_q0),
    .din2(buf_V_2_q0),
    .din3(row_ind_V_7_cast),
    .dout(tmp_6_fu_448_p5)
);

fast_accel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U166(
    .din0(buf_V_q0),
    .din1(buf_V_1_q0),
    .din2(buf_V_2_q0),
    .din3(row_ind_V_8_cast),
    .dout(tmp_9_fu_466_p5)
);

fast_accel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U167(
    .din0(buf_V_q0),
    .din1(buf_V_1_q0),
    .din2(buf_V_2_q0),
    .din3(row_ind_V_9_cast),
    .dout(tmp_3_fu_484_p5)
);

fast_accel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b0))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln1027_fu_354_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            col_V_4_fu_94 <= col_V_5_fu_360_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            col_V_4_fu_94 <= 13'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            src_buf_V_1_fu_110 <= 8'd0;
        end else if (((icmp_ln1027_reg_753_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
            src_buf_V_1_fu_110 <= src_buf_V_20_fu_518_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            src_buf_V_2_fu_118 <= 8'd0;
        end else if (((icmp_ln1027_reg_753_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
            src_buf_V_2_fu_118 <= src_buf_V_18_fu_502_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            src_buf_V_3_fu_102 <= 8'd0;
        end else if (((icmp_ln1027_reg_753_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
            src_buf_V_3_fu_102 <= ap_phi_mux_src_buf_V_13_phi_fu_297_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            src_buf_V_4_fu_114 <= 8'd0;
        end else if (((icmp_ln1027_reg_753_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
            src_buf_V_4_fu_114 <= src_buf_V_19_fu_510_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            src_buf_V_5_fu_106 <= 8'd0;
        end else if (((icmp_ln1027_reg_753_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
            src_buf_V_5_fu_106 <= ap_phi_mux_src_buf_V_14_phi_fu_288_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            src_buf_V_fu_98 <= 8'd0;
        end else if (((icmp_ln1027_reg_753_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
            src_buf_V_fu_98 <= ap_phi_mux_src_buf_V_12_phi_fu_306_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_fu_354_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln666_reg_764 <= and_ln666_fu_372_p2;
        icmp_ln1027_1_reg_757 <= icmp_ln1027_1_fu_366_p2;
        trunc_ln789_reg_768 <= trunc_ln789_fu_390_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        col_V_reg_746 <= ap_sig_allocacmp_col_V;
        col_V_reg_746_pp0_iter1_reg <= col_V_reg_746;
        icmp_ln1027_1_reg_757_pp0_iter1_reg <= icmp_ln1027_1_reg_757;
        icmp_ln1027_reg_753 <= icmp_ln1027_fu_354_p2;
        icmp_ln1027_reg_753_pp0_iter1_reg <= icmp_ln1027_reg_753;
        trunc_ln789_reg_768_pp0_iter1_reg <= trunc_ln789_reg_768;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln1027_1_reg_757_pp0_iter2_reg <= icmp_ln1027_1_reg_757_pp0_iter1_reg;
        icmp_ln1027_reg_753_pp0_iter2_reg <= icmp_ln1027_reg_753_pp0_iter1_reg;
        trunc_ln789_reg_768_pp0_iter2_reg <= trunc_ln789_reg_768_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_753_pp0_iter1_reg == 1'd0))) begin
        icmp_ln1031_reg_788 <= icmp_ln1031_fu_411_p2;
    end
end

always @ (*) begin
    if (((icmp_ln1027_fu_354_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1027_reg_753_pp0_iter2_reg == 1'd0)) begin
        if ((icmp_ln1031_reg_788 == 1'd1)) begin
            ap_phi_mux_src_buf_V_12_phi_fu_306_p4 = src_buf_V_20_fu_518_p3;
        end else if ((icmp_ln1031_reg_788 == 1'd0)) begin
            ap_phi_mux_src_buf_V_12_phi_fu_306_p4 = src_buf_V_1_fu_110;
        end else begin
            ap_phi_mux_src_buf_V_12_phi_fu_306_p4 = ap_phi_reg_pp0_iter3_src_buf_V_12_reg_303;
        end
    end else begin
        ap_phi_mux_src_buf_V_12_phi_fu_306_p4 = ap_phi_reg_pp0_iter3_src_buf_V_12_reg_303;
    end
end

always @ (*) begin
    if ((icmp_ln1027_reg_753_pp0_iter2_reg == 1'd0)) begin
        if ((icmp_ln1031_reg_788 == 1'd1)) begin
            ap_phi_mux_src_buf_V_13_phi_fu_297_p4 = src_buf_V_19_fu_510_p3;
        end else if ((icmp_ln1031_reg_788 == 1'd0)) begin
            ap_phi_mux_src_buf_V_13_phi_fu_297_p4 = src_buf_V_4_fu_114;
        end else begin
            ap_phi_mux_src_buf_V_13_phi_fu_297_p4 = ap_phi_reg_pp0_iter3_src_buf_V_13_reg_294;
        end
    end else begin
        ap_phi_mux_src_buf_V_13_phi_fu_297_p4 = ap_phi_reg_pp0_iter3_src_buf_V_13_reg_294;
    end
end

always @ (*) begin
    if ((icmp_ln1027_reg_753_pp0_iter2_reg == 1'd0)) begin
        if ((icmp_ln1031_reg_788 == 1'd1)) begin
            ap_phi_mux_src_buf_V_14_phi_fu_288_p4 = src_buf_V_18_fu_502_p3;
        end else if ((icmp_ln1031_reg_788 == 1'd0)) begin
            ap_phi_mux_src_buf_V_14_phi_fu_288_p4 = src_buf_V_2_fu_118;
        end else begin
            ap_phi_mux_src_buf_V_14_phi_fu_288_p4 = ap_phi_reg_pp0_iter3_src_buf_V_14_reg_285;
        end
    end else begin
        ap_phi_mux_src_buf_V_14_phi_fu_288_p4 = ap_phi_reg_pp0_iter3_src_buf_V_14_reg_285;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_col_V = 13'd0;
    end else begin
        ap_sig_allocacmp_col_V = col_V_4_fu_94;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_V_1_ce0 = 1'b1;
    end else begin
        buf_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_V_1_ce1 = 1'b1;
    end else begin
        buf_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln666_reg_764) & (icmp_ln1027_reg_753 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (row_ind_V_9_cast_read_reg_721 == 2'd1))) begin
        buf_V_1_we1 = 1'b1;
    end else begin
        buf_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_V_2_ce0 = 1'b1;
    end else begin
        buf_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_V_2_ce1 = 1'b1;
    end else begin
        buf_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(row_ind_V_9_cast_read_reg_721 == 2'd0) & ~(row_ind_V_9_cast_read_reg_721 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln666_reg_764) & (icmp_ln1027_reg_753 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_V_2_we1 = 1'b1;
    end else begin
        buf_V_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_V_ce0 = 1'b1;
    end else begin
        buf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_V_ce1 = 1'b1;
    end else begin
        buf_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln666_reg_764) & (icmp_ln1027_reg_753 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (row_ind_V_9_cast_read_reg_721 == 2'd0))) begin
        buf_V_we1 = 1'b1;
    end else begin
        buf_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op112_write_state4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        imgOutput_data2_blk_n = imgOutput_data2_full_n;
    end else begin
        imgOutput_data2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op112_write_state4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        imgOutput_data2_write = 1'b1;
    end else begin
        imgOutput_data2_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op54_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_dst_data1_blk_n = p_dst_data1_empty_n;
    end else begin
        p_dst_data1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op54_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_dst_data1_read = 1'b1;
    end else begin
        p_dst_data1_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln1023_1_fu_586_p2 = (icmp_ln1035_3_fu_544_p2 & icmp_ln1035_2_fu_538_p2);

assign and_ln1023_2_fu_592_p2 = (and_ln1023_fu_580_p2 & and_ln1023_1_fu_586_p2);

assign and_ln1023_3_fu_598_p2 = (icmp_ln1035_5_fu_556_p2 & icmp_ln1035_4_fu_550_p2);

assign and_ln1023_4_fu_604_p2 = (icmp_ln1035_7_fu_568_p2 & icmp_ln1023_fu_574_p2);

assign and_ln1023_5_fu_610_p2 = (icmp_ln1035_6_fu_562_p2 & and_ln1023_4_fu_604_p2);

assign and_ln1023_6_fu_616_p2 = (and_ln1023_5_fu_610_p2 & and_ln1023_3_fu_598_p2);

assign and_ln1023_fu_580_p2 = (icmp_ln1035_fu_526_p2 & icmp_ln1035_1_fu_532_p2);

assign and_ln666_fu_372_p2 = (icmp_ln1027_1_fu_366_p2 & cmp_i_i322_i);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_predicate_op112_write_state4 == 1'b1) & (imgOutput_data2_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_predicate_op54_read_state2 == 1'b1) & (p_dst_data1_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_predicate_op112_write_state4 == 1'b1) & (imgOutput_data2_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_predicate_op54_read_state2 == 1'b1) & (p_dst_data1_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_predicate_op112_write_state4 == 1'b1) & (imgOutput_data2_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_predicate_op54_read_state2 == 1'b1) & (p_dst_data1_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((ap_predicate_op54_read_state2 == 1'b1) & (p_dst_data1_empty_n == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = ((ap_predicate_op112_write_state4 == 1'b1) & (imgOutput_data2_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter3_src_buf_V_12_reg_303 = 'bx;

assign ap_phi_reg_pp0_iter3_src_buf_V_13_reg_294 = 'bx;

assign ap_phi_reg_pp0_iter3_src_buf_V_14_reg_285 = 'bx;

always @ (*) begin
    ap_predicate_op112_write_state4 = ((icmp_ln1031_reg_788 == 1'd0) & (icmp_ln1027_reg_753_pp0_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op54_read_state2 = ((1'd1 == and_ln666_reg_764) & (icmp_ln1027_reg_753 == 1'd0));
end

assign buf_V_1_address0 = conv_i131_i_fu_405_p1;

assign buf_V_1_address1 = zext_ln541_fu_399_p1;

assign buf_V_1_d1 = p_dst_data1_dout;

assign buf_V_2_address0 = conv_i131_i_fu_405_p1;

assign buf_V_2_address1 = zext_ln541_fu_399_p1;

assign buf_V_2_d1 = p_dst_data1_dout;

assign buf_V_address0 = conv_i131_i_fu_405_p1;

assign buf_V_address1 = zext_ln541_fu_399_p1;

assign buf_V_d1 = p_dst_data1_dout;

assign col_V_5_fu_360_p2 = (ap_sig_allocacmp_col_V + 13'd1);

assign conv_i131_i_fu_405_p1 = col_V_reg_746_pp0_iter1_reg;

assign icmp_ln1023_fu_574_p2 = ((src_buf_V_4_fu_114 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1027_1_fu_366_p2 = ((zext_ln1027_fu_350_p1 < img_width_load) ? 1'b1 : 1'b0);

assign icmp_ln1027_fu_354_p2 = ((zext_ln1027_fu_350_p1 > img_width_load) ? 1'b1 : 1'b0);

assign icmp_ln1031_fu_411_p2 = ((col_V_reg_746_pp0_iter1_reg == 13'd0) ? 1'b1 : 1'b0);

assign icmp_ln1035_1_fu_532_p2 = ((src_buf_V_4_fu_114 > src_buf_V_19_fu_510_p3) ? 1'b1 : 1'b0);

assign icmp_ln1035_2_fu_538_p2 = ((src_buf_V_fu_98 < src_buf_V_4_fu_114) ? 1'b1 : 1'b0);

assign icmp_ln1035_3_fu_544_p2 = ((src_buf_V_4_fu_114 > src_buf_V_1_fu_110) ? 1'b1 : 1'b0);

assign icmp_ln1035_4_fu_550_p2 = ((src_buf_V_20_fu_518_p3 < src_buf_V_4_fu_114) ? 1'b1 : 1'b0);

assign icmp_ln1035_5_fu_556_p2 = ((src_buf_V_4_fu_114 > src_buf_V_5_fu_106) ? 1'b1 : 1'b0);

assign icmp_ln1035_6_fu_562_p2 = ((src_buf_V_2_fu_118 < src_buf_V_4_fu_114) ? 1'b1 : 1'b0);

assign icmp_ln1035_7_fu_568_p2 = ((src_buf_V_4_fu_114 > src_buf_V_18_fu_502_p3) ? 1'b1 : 1'b0);

assign icmp_ln1035_fu_526_p2 = ((src_buf_V_3_fu_102 < src_buf_V_4_fu_114) ? 1'b1 : 1'b0);

assign imgOutput_data2_din = ((pix_fu_622_p2[0:0] == 1'b1) ? 8'd255 : 8'd0);

assign pix_fu_622_p2 = (and_ln1023_6_fu_616_p2 & and_ln1023_2_fu_592_p2);

assign row_ind_V_9_cast_read_reg_721 = row_ind_V_9_cast;

assign src_buf_V_18_fu_502_p3 = ((icmp_ln1027_1_reg_757_pp0_iter2_reg[0:0] == 1'b1) ? src_buf_V_8_fu_495_p3 : src_buf_V_2_fu_118);

assign src_buf_V_19_fu_510_p3 = ((icmp_ln1027_1_reg_757_pp0_iter2_reg[0:0] == 1'b1) ? src_buf_V_7_fu_477_p3 : src_buf_V_4_fu_114);

assign src_buf_V_20_fu_518_p3 = ((icmp_ln1027_1_reg_757_pp0_iter2_reg[0:0] == 1'b1) ? src_buf_V_6_fu_459_p3 : src_buf_V_1_fu_110);

assign src_buf_V_6_fu_459_p3 = ((spec_select51[0:0] == 1'b1) ? tmp_5_fu_437_p5 : tmp_6_fu_448_p5);

assign src_buf_V_7_fu_477_p3 = ((spec_select55[0:0] == 1'b1) ? tmp_5_fu_437_p5 : tmp_9_fu_466_p5);

assign src_buf_V_8_fu_495_p3 = ((spec_select59[0:0] == 1'b1) ? tmp_5_fu_437_p5 : tmp_3_fu_484_p5);

assign trunc_ln789_fu_390_p1 = tmp_4_fu_378_p5[1:0];

assign zext_ln1027_fu_350_p1 = ap_sig_allocacmp_col_V;

assign zext_ln541_fu_399_p1 = col_V_reg_746;

endmodule //fast_accel_xFfastnms_0_1080_1440_0_1_1_1_1_1441_3_9_4_Pipeline_Col_Loop
